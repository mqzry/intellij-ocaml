{
  parserClass="package com.github.mqzry.ocaml.plugin.parser.OCamlParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="OCaml"
  psiImplClassSuffix="Impl"
  psiPackage="package com.github.mqzry.ocaml.plugin.psi"
  psiImplPackage="package com.github.mqzry.ocaml.plugin.psi.impl"

  elementTypeHolderClass="package com.github.mqzry.ocaml.plugin.psi.OCamlElementTypes"
  elementTypeClass="package com.github.mqzry.ocaml.plugin.OCamlElementType"
  tokenTypeClass="package com.github.mqzry.ocaml.plugin.OCamlTokenType"

  tokens = [
    blank = "regexp:( |\t|\r|\n|\f)+"
    start_comment = "(*"
    end_comment = "*)"
    id_upper = "regexp:[A-Z_]?[A-Za-z0-9_']*"
    id_lower = "regexp:[A-Z_]?[A-Za-z0-9_']*"
    int_dec = "regexp:-?[0-9][0-9_]*"
    int_oct = "regexp:-?(0x|0X)[0-9A-Fa-f][0-9A-Fa-f_]*"
    int_hex = "regexp:-?(0o|0O)[0-7][0-7_]*"
    int_bin = "regexp:-?(0b|0B)[0-1][0-1_]*"

    float_dec = "regexp:-?[0-9][0-9_]*(.[0-9_]*)?([e|E][+|-]?[0-9][0-9_]*)"
    float_hex = "regexp:-?(0x|0X)[0-9A-Fa-f_][0-9A-Fa-f_]*(.[0-9A-Fa-f_]*)?([p|P][+|-]?[0-9][0-9_]*)"

    char_delim = "'"
    string_delim = '"'

    regular_char = 'regexp:[]'
    escaped_char = "regexp:\\[\\\"'nrtb ]"

    ascii_code_dec ="regexp:\\[0-9]{3}"
    ascii_code_hex ="regexp:\\x[0-9A-Fa-f]{2}"
    ascii_code_oct ="regexp:\\o[0-3][0-7]{2}"
    label_prefix = '~'
    backslash = "regexp:\\"
    newline = "regexp:\n"
    tab = "regexp:\t"
    space = "regexp: "
  ]
}

char ::= regular_char
string ::= string_delim (escaped_char|regular_char|(backslash newline (space|tab)*))* string_delim
identifier ::= id_lower | id_upper




